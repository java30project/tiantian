<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cssl.tiantian.dao.product.ProductMapper">
    <resultMap id="productMap" type="product">
        <id column="pId" property="proId"/>
        <association property="shop" javaType="shop">
            <id column="sId" property="shopId"/>
            <association property="user" javaType="user"  resultMap="findUserByUserIdMap"></association>
        </association>
        <association property="productCategory" javaType="productCategory" column="pcId"
                     select="com.cssl.tiantian.dao.productCategory.ProductCategoryMapper.getProductCategoryByPcId"/>
        <collection property="orderDetails" ofType="orderDetail" resultMap="findOrderDetailMap"/>
    </resultMap>
    <resultMap id="findUserByUserIdMap" type="user">
        <id column="uId" property="userId"/>
    </resultMap>
    <resultMap id="findOrderDetailMap" type="orderDetail">
        <id column="odId" property="odId"/>
    </resultMap>

    <select id="getAll" resultMap="productMap">
        select * from product order by createTime asc
    </select>
    <select id="getProductByProName" resultType="product">
        select * from product
        <trim prefix="where" prefixOverrides="and | or">
            <if test="proName != null and proName != ''">
                and proName like CONCAT("%",#{proName},"%")
            </if>
        </trim>
        LIMIT ${currentPage},${pageSize}
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        select count(1) from product
        <trim prefix="where" prefixOverrides="and | or">
            <if test="proName != null and proName != ''">
                and proName like CONCAT("%",#{proName},"%")
            </if>
        </trim>
    </select>

    <select id="getProductByProId" parameterType="java.lang.Integer" resultMap="productMap">
         SELECT p.*,p.proId pId,p.pcId pcId,s.*,s.shopId sId,u.*,u.userId uId
         FROM product p,shop s,user u
         WHERE p.shopId=s.shopId
         AND s.userId=u.userId
         AND proId=#{proId}
    </select>

    <select id="getProductByPcId" resultMap="productMap">
        SELECT * FROM product WHERE pcId
          IN(
            SELECT pcId FROM productcategory WHERE parentId = ${pcId} OR pcId = ${pcId}
          )
          LIMIT ${currentPage},${pageSize}
    </select>
    <select id="getCountByPcId" resultType="java.lang.Integer">
        SELECT count(1) FROM product WHERE pcId
          IN(
            SELECT pcId FROM productcategory WHERE parentId = ${pcId} OR pcId = ${pcId}
          )
    </select>
    <select id="getProductByPcId3" resultMap="productMap">
        SELECT * FROM product WHERE pcId
          IN (
            SELECT pcId FROM productcategory a WHERE a.parentId
              IN(
                SELECT parentId FROM productcategory WHERE pcId = ${pcId}
              )
          )
          LIMIT ${currentPage},${pageSize}
    </select>
    <select id="getCountByPcId3" resultType="java.lang.Integer">
        SELECT count(1) FROM product WHERE pcId
          IN (
            SELECT pcId FROM productCategory a WHERE a.parentId
              IN(
                SELECT parentId FROM productcategory WHERE pcId = ${pcId}
              )
          )
    </select>
    <select id="getAllByOrder" resultMap="productMap">
        SELECT * FROM product ORDER BY proPrice DESC
          LIMIT ${currentPage},${pageSize}
    </select>
    <select id="getAllByPrice" resultMap="productMap">
        SELECT * FROM product WHERE proPrice=9.9
    </select>
    <select id="getAllByOrderCount" resultMap="productMap">
        SELECT a.*,a.proId pId,b.* FROM product a,orderdetail b WHERE a.proId = b.proId
    </select>

    <update id="updateProductById" parameterType="java.util.Map">
        UPDATE product set
        <foreach item="value" index="key" collection="product" separator=",">
            <if test="key != 'proId'">
                ${key} = #{value}
            </if>
        </foreach>
        WHERE
        <foreach item="value" index="key" collection="product" separator=",">
            <if test="key == 'proId'">
                proId = #{value}
            </if>
        </foreach>
    </update>

    <update id="updateStockById" parameterType="int">
        update product set stock = #{stock} where proId = #{proId}
    </update>
</mapper>